View(df_mem2)
get_resource_data<-function(notebook){
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode",account="dacss",server='shinyapps.io')
df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode",account="dacss",server='shinyapps.io')
df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache",account="dacss",server='shinyapps.io')
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss",account="dacss",server='shinyapps.io')
df_conn1<-tidy_metric_data(notebook,"container_status","connect_count",account="dacss",server='shinyapps.io')
df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs",account="dacss",server='shinyapps.io')
# output<-list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
output<-list(df_cpu1,df_cpu2,df_mem2)
print(output[2])
return(output)
}
#
# data=tidy_metric_data("601-Rmarkdown_BestPractices","docker_container_cpu","usage_in_kernelmode")#get_resource_data("601-Rmarkdown_BestPractices")
# View(data)
resource_df<-get_resource_data("601-Rmarkdown_BestPractices")
get_resource_data<-function(notebook){
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode",account="dacss",server='shinyapps.io')
df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode",account="dacss",server='shinyapps.io')
df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache",account="dacss",server='shinyapps.io')
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss",account="dacss",server='shinyapps.io')
df_conn1<-tidy_metric_data(notebook,"container_status","connect_count",account="dacss",server='shinyapps.io')
df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs",account="dacss",server='shinyapps.io')
# output<-list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
output<-list(df_cpu1,df_mem2)
print(output[1])
return(output)
}
#
# data=tidy_metric_data("601-Rmarkdown_BestPractices","docker_container_cpu","usage_in_kernelmode")#get_resource_data("601-Rmarkdown_BestPractices")
# View(data)
resource_df<-get_resource_data("601-Rmarkdown_BestPractices")
get_resource_data<-function(notebook){
# df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode",account="dacss",server='shinyapps.io')
# df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode",account="dacss",server='shinyapps.io')
# df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache",account="dacss",server='shinyapps.io')
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss",account="dacss",server='shinyapps.io')
df_conn1<-tidy_metric_data(notebook,"container_status","connect_count",account="dacss",server='shinyapps.io')
df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs",account="dacss",server='shinyapps.io')
# output<-list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
output<-list(df_mem2)
print(output[0])
return(output)
}
#
# data=tidy_metric_data("601-Rmarkdown_BestPractices","docker_container_cpu","usage_in_kernelmode")#get_resource_data("601-Rmarkdown_BestPractices")
# View(data)
resource_df<-get_resource_data("601-Rmarkdown_BestPractices")
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
get_resource_data<-function(notebook){
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode",account="dacss",server='shinyapps.io')
df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode",account="dacss",server='shinyapps.io')
df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache",account="dacss",server='shinyapps.io')
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss",account="dacss",server='shinyapps.io')
# df_conn1<-tidy_metric_data(notebook,"container_status","connect_count",account="dacss",server='shinyapps.io')
# df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs",account="dacss",server='shinyapps.io')
# output<-list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
output<-list(df_mem2,df_mem1,df_cpu1,df_cpu2)
print(output[0])
return(output)
}
# data=tidy_metric_data("601-Rmarkdown_BestPractices","docker_container_cpu","usage_in_kernelmode")#get_resource_data("601-Rmarkdown_BestPractices")
# View(data)
resource_df<-get_resource_data("601-Rmarkdown_BestPractices")
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode",account="dacss",server='shinyapps.io')
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
source("~/Work Directory/DACSS/DACSS_Work/resource_utilization.r", echo=TRUE)
df_mem2<-tidy_metric_data("601-Rmarkdown_BestPractices","docker_container_mem","total_cache",account="dacss",server='shinyapps.io')
resource_df<-get_resource_data("601-Rmarkdown_BestPractices")
View(resource_df[2])
resource_df<-get_resource_data("601-Rmarkdown_BestPractices")
resource_df<-get_resource_data("601-Rmarkdown_BestPractices")
View(df_cpu1)
notebook="601-Rmarkdown_BestPractices"
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode")
notebook="601-Rmarkdown_BestPractices"
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode")
notebook="601-Rmarkdown_BestPractices"
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode")
library(rsconnect)
library(dplyr)
tidy_metric_data<-function(app,metric_family,metric_type,account="dacss",server='shinyapps.io'){
df<-tryCatch({
df<-rsconnect::showMetrics(metric_family,account = account,
appName = app,
c(metric_type),
server=server)
index<-is.na(names(df))
names(df)[index] <- "utilization"
df<-arrange(df,desc(utilization))%>%
filter(utilization!=0)
},
error = function(e){
df<-NA
}
)
return(df)
}
notebook="601-Rmarkdown_BestPractices"
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode")
df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode")
df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache")
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss")
df_conn1<-tidy_metric_data(notebook,"container_status","connect_count")
df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs")
View(df_cpu1)
output=[df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2]
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
lenght(output)
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
for (x in output){
if (!is.na(x)){
write.csv(x)
}
}
notebook="601-Rmarkdown_BestPractices"
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode")
df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode")
df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache")
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss")
df_conn1<-tidy_metric_data(notebook,"container_status","connect_count")
df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs")
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
for (x in output){
if (!is.na(x)){
write.csv(x)
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
for (x in output){
if (is.data.frame(x)){
write.csv(x)
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,"df"+i+".csv")
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,"df"+as.character(i)+".csv")
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,paste("df"+as.character(i)+".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,paste("df"+as.character(i)+".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,paste("df"+as.character(i)+".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,paste("df"+as.character(i)+".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,paste("df"+as.character(i)+".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,paste("df"+as.character(i)+".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,paste("df",i,".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write.csv(x,file=paste("df",i,".csv"))
i=i+1
}
}
library(rsconnect)
library(dplyr)
library(readr)
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write_csv(x,file=paste("df",i,".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
write_csv(x,paste("df",i,".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
print("hello",i)
write_csv(x,paste("df",i,".csv"))
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
print("hello")
write_csv(x,paste("df",i,".csv"))
i=i+1
}
}
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode")
df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode")
df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache")
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss")
df_conn1<-tidy_metric_data(notebook,"container_status","connect_count")
df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs")
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
name=paste("df_",i,".csv")
print(name)
write_csv(x,name)
i=i+1
}
}
getwd()
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
ls=getwd()
for (x in output){
if (is.data.frame(x)){
name=paste(ls,"/df_",i,".csv")
print(name)
write_csv(x,name)
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
ls=getwd()
for (x in output){
if (is.data.frame(x)){
name=paste(ls,"/df_",i,".csv",sep = "")
print(name)
write_csv(x,name)
i=i+1
}
}
script.dir <- dirname(sys.frame(1)$ofile)
sourceDir
system.getCurrentDirectory()
library(system)
getSrcDirectory(function(x) {x})
getSrcDirectory(function(x) {x})
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
name=paste("/df_",i,".csv",sep = "")
print(name)
write_csv(x,name)
i=i+1
}
}
notebook="601-Rmarkdown_BestPractices"
df_cpu1<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_kernelmode")
df_cpu2<-tidy_metric_data(notebook,"docker_container_cpu","usage_in_usermode")
df_mem1<-tidy_metric_data(notebook,"docker_container_mem","total_cache")
df_mem2<-tidy_metric_data(notebook,"docker_container_mem","total_rss")
df_conn1<-tidy_metric_data(notebook,"container_status","connect_count")
df_conn2<-tidy_metric_data(notebook,"container_status","connect_procs")
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
name=paste("/df_",i,".csv",sep = "")
print(name)
write_csv(x,name)
i=i+1
}
}
output=list(df_cpu1,df_cpu2,df_mem1,df_mem2,df_conn1,df_conn2)
length(output)
i=0
for (x in output){
if (is.data.frame(x)){
name=paste("df_",i,".csv",sep = "")
print(name)
write_csv(x,name)
i=i+1
}
}
setwd(~)
~
getwd()
setwd("~")
ls
getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/animeshsengupta/Work Directory/DACSS/STAT625/Homeworks")
library(alr4)  # loads the installed package into the workspace so you can use it
library(summarytools)
library(ggplot2)
library(plotly)
library(splines)
colnames(UN11)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/animeshsengupta/Work Directory/DACSS/STAT625/Homeworks")
library(alr4)  # loads the installed package into the workspace so you can use it
library(summarytools)
library(ggplot2)
library(plotly)
library(splines)
## Answer 6.1
```{r}
colnames(UN11)
unml1<-lm()
colnames(UN11)
unml1<-lm(lifeExpF~group,data=UN11)
unml2<-lm(lifeExpF~log(ppgdp),data=UN11)
colnames(UN11)
unml1<-lm(lifeExpF~group,data=UN11)
unml2<-lm(lifeExpF~log(ppgdp),data=UN11)
summary(unml1)
summary(unml2)
colnames(UN11)
unml1<-lm(lifeExpF~group,data=UN11)
unml2<-lm(lifeExpF~log(ppgdp),data=UN11)
anova(unml1,unml2)
colnames(UN11)
unml1<-lm(lifeExpF~group,data=UN11)
unml2<-lm(lifeExpF~log(ppgdp),data=UN11)
anova(unml1,unml2)
colnames(UN11)
unml3<-lm(lifeExpF~group+log(ppgdp),data=UN11)
summary(unml3)
colnames(UN11)
unml3<-lm(lifeExpF~group+log(ppgdp)+group:log(ppgdp),data=UN11)
summary(unml3)
colnames(UN11)
summary(UN11$group)
unml3<-lm(lifeExpF~group+log(ppgdp)+group:log(ppgdp),data=UN11)
summary(unml3)
colnames(UN11)
summary(UN11$group)
unml3<-lm(lifeExpF~group+log(ppgdp),data=UN11)
summary(unml3)
colnames(UN11)
summary(UN11$group)
unml3<-lm(lifeExpF~group+log(ppgdp)+group:log(ppgdp),data=UN11)
summary(unml3)
colnames(UN11)
unml3<-lm(lifeExpF~group+log(ppgdp)+group:log(ppgdp),data=UN11)
summary(unml3)
unml3<-lm(lifeExpF~group+log(ppgdp)+group:log(ppgdp),data=UN11)
summary(unml3)
unml3<-lm(lifeExpF~group+log(ppgdp)+group:log(ppgdp),data=UN11)
summary(unml3)
linearHypothesis(unml3,"groupother-groupafrica")
linearHypothesis(unml3,"groupother=groupafrica")
linearHypothesis(unml3,"groupother-groupafrica")
linearHypothesis(unml3,"groupother+groupafrica")
linearHypothesis(unml3,"groupother=groupafrica")
linearHypothesis(unml3,"groupother=groupafrica")
linearHypothesis(unml3,"groupother=groupafrica")
colnames(Rateprof)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
summary(rpl)
Anova(rpl)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
summary(rpl)
Anova(rpl)
1.751**2
Anova(rpl)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
summary(rpl$coefficients)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
summary(rpl$coef)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
summary(rpl$effects)
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
rpl$coefficients
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
rpl$qr
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
tvals<-rpl$coefficients[,3]
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
tvals<-rpl$coefficients[ , 3]
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
tvals<-rpl$coefficients
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
tvals<-rpl$coefficients
tvals
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
tvals<-rpl$coefficients[ , 3]
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
coef(summary(rpl))[, "t value"]
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
tvals<-coef(summary(rpl))[, "t value"]**2
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
tvals<-coef(summary(rpl))[, "t value"]**2
tvals
Anova(rpl)
tvals<-coef(summary(rpl))[, "t value"]**2
tvals
colnames(Rateprof)
rpl<-lm(quality~gender+ numYears + pepper + discipline + easiness + raterInterest,data=Rateprof)
summary(rpl)
plot(effect("Discipline",rpl))
plot(effect("discipline",rpl))
plot(effect("discipline",rpl))
colnames(fuel2001)
fl1<-lm(,data=fuel2001)
colnames(fuel2001)
fl1<-lm(FuelC~Tax+Drivers+Income+log(Miles),data=fuel2001)
fl2<-lm(FuelC~log(Miles)+Income+Drivers+Tax,data=fuel2001)
colnames(fuel2001)
fl1<-lm(FuelC~Tax+Drivers+Income+log(Miles),data=fuel2001)
fl2<-lm(FuelC~log(Miles)+Income+Drivers+Tax,data=fuel2001)
anova(fl1)
anova(fl2)
Anova(fl1)
Anova(fl2)
